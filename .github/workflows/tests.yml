name: Tests
on: [push, pull_request, workflow_dispatch]

jobs:
  tests:
    name: ${{ matrix.os }}, Python ${{ matrix.python-version }}${{ matrix.experimental && ', experimental' || '' }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.8", "3.9", "3.10"]
        experimental: [false]
        include:
          - os: "ubuntu-latest"
            python-version: "3.10"
            experimental: true

          - os: "ubuntu-latest"
            python-version: "3.10"
            experimental: false
            coverage: true

          - os: "windows-latest"
            python-version: ""
            experimental: false

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
        if: matrix.os == "ubuntu-latest"

      - name: Install dependencies
        run: |
          sudo apt install libgeos-dev
          pip install -U pip
          pip install -e .[ximage,dev]
          if echo ${{ matrix.experimental }} | grep -c "true"
          then
            pip --disable-pip-version-check list --outdated --format=json | python -c "import json, sys; print('\n'.join([x['name'] for x in json.load(sys.stdin)]))" | xargs -n1 pip install -U
          fi
        shell: bash
        if: matrix.os == "ubuntu-latest"

      - name: Set up micromamba
        uses: uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: "./environment.yml"
        if: matrix.os == "windows-latest"

      - name: Test with pytest
        run: |
          coverage run -m pytest

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        if: matrix.coverage
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Generate coverage report in lcov format
        if: matrix.coverage
        run: |
          coverage lcov -o coverage/lcov.info

      - name: Coveralls Parallel
        uses: coverallsapp/github-action@v2
        if: matrix.coverage
        with:
          parallel: true

  end-coveralls:
    needs: [tests]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: coverallsapp/github-action@v2
      with:
        parallel-finished: true
